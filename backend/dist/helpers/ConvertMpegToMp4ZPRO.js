'use strict';
const _0x168688 = _0xa983;
(function (_0x1fcabf, _0x10d63c) {
    const _0x5c14e3 = _0xa983, _0x2a4e35 = _0x1fcabf();
    while (!![]) {
        try {
            const _0x378e82 = -parseInt(_0x5c14e3(0x181)) / (0x162f + -0x95 * -0x17 + -0xf * 0x25f) * (-parseInt(_0x5c14e3(0x14b)) / (-0x71e * -0x1 + -0x1f48 + 0x182c)) + parseInt(_0x5c14e3(0x13c)) / (-0x7 * 0x229 + -0x74 + 0xf96) * (-parseInt(_0x5c14e3(0x185)) / (0x1a1 + -0xd37 + 0xb9a)) + parseInt(_0x5c14e3(0x144)) / (-0x1 * -0xa13 + 0x2028 + -0x1 * 0x2a36) * (parseInt(_0x5c14e3(0x177)) / (0x9c5 + -0xde2 + 0x3 * 0x161)) + parseInt(_0x5c14e3(0x175)) / (0x1 * -0x95a + -0x2b * 0x2b + 0xa * 0x1a9) * (parseInt(_0x5c14e3(0x157)) / (-0x7 * -0x203 + -0x398 + 0x1 * -0xa75)) + -parseInt(_0x5c14e3(0x16e)) / (0x2212 + 0x607 * 0x4 + -0x3a25) + -parseInt(_0x5c14e3(0x14d)) / (-0x1036 + -0x1f55 * 0x1 + 0x3a9 * 0xd) * (-parseInt(_0x5c14e3(0x17b)) / (0x24fe + -0x1bed + -0xa5 * 0xe)) + -parseInt(_0x5c14e3(0x186)) / (-0xf15 + -0x2 * 0x1b2 + 0x1285) * (parseInt(_0x5c14e3(0x184)) / (0x1f81 + 0x6c1 + -0x2635 * 0x1));
            if (_0x378e82 === _0x10d63c)
                break;
            else
                _0x2a4e35['push'](_0x2a4e35['shift']());
        } catch (_0x39b479) {
            _0x2a4e35['push'](_0x2a4e35['shift']());
        }
    }
}(_0xe1eb, 0x4c076 * 0x2 + 0x1383 * -0x2 + 0x17 * -0x28e6));
var __importDefault = this && this[_0x168688(0x183) + _0x168688(0x14c)] || function (_0x353d5a) {
    const _0x130494 = _0x168688;
    return _0x353d5a && _0x353d5a[_0x130494(0x171)] ? _0x353d5a : { 'default': _0x353d5a };
};
const _0x5dc92f = {};
_0x5dc92f[_0x168688(0x164)] = !![], Object[_0x168688(0x13d) + _0x168688(0x142)](exports, _0x168688(0x171), _0x5dc92f), exports[_0x168688(0x15e) + _0x168688(0x17f)] = void (-0x574 * 0x1 + -0xa4c + 0xfc0);
function _0xe1eb() {
    const _0x256057 = [
        'exist:\x20',
        'QXlVG',
        ':\x20Encoding',
        'setFfmpegP',
        'existsSync',
        'value',
        'percent',
        'peg',
        ':::\x20ZDG\x20::',
        'path',
        'succeeded\x20',
        ':\x20Processi',
        '\x20to\x20',
        'anscoding\x20',
        'Nwqmm',
        '617112SyeZdM',
        '@ffmpeg-in',
        'mpeg',
        '__esModule',
        ':::\x20Z-PRO\x20',
        'mp4',
        'VOxoI',
        '1456bMuMuC',
        '\x20Error:\x20',
        '24xkeHtj',
        '\x20does\x20not\x20',
        ':\x20Spawned\x20',
        '../utils/l',
        '99473EfAjwq',
        'QBbuR',
        ':\x20Video\x20Tr',
        'progress',
        'gToMp4',
        'dybYS',
        '3zKPetq',
        'ath',
        '__importDe',
        '5005uhvoJz',
        '4ROxjGv',
        '12396jAgoHQ',
        '%\x20done',
        '773523fYSwhx',
        'defineProp',
        'message',
        'default',
        'zBKcb',
        'staller/ff',
        'erty',
        'start',
        '136615GHwxzg',
        'GzLLS',
        'oggerZPRO',
        'ng:\x20',
        'output',
        'Input\x20file',
        'info',
        '65386zoylDl',
        'fault',
        '650tfMseX',
        'Ffmpeg\x20wit',
        'h\x20command:',
        'end',
        'error',
        'QYsPK',
        'EgOnQ',
        'ng\x20',
        'run',
        ':\x20Converti',
        '11576hEajcw',
        'MuqfT',
        'JAiSd',
        'outputForm',
        'fluent-ffm',
        'logger',
        'inputForma',
        'convertMpe'
    ];
    _0xe1eb = function () {
        return _0x256057;
    };
    return _0xe1eb();
}
const fluent_ffmpeg_1 = __importDefault(require(_0x168688(0x15b) + _0x168688(0x166))), ffmpeg_1 = require(_0x168688(0x16f) + _0x168688(0x141) + _0x168688(0x170)), fs_1 = __importDefault(require('fs')), loggerZPRO_1 = require(_0x168688(0x17a) + _0x168688(0x146)), convertMpegToMp4 = (_0x3eba27, _0xdcff3a) => {
        const _0x3c4125 = _0x168688, _0x4cfd41 = {
                'QYsPK': function (_0x5000bb, _0x1ee1ed) {
                    return _0x5000bb(_0x1ee1ed);
                },
                'VOxoI': _0x3c4125(0x172) + _0x3c4125(0x167) + _0x3c4125(0x17d) + _0x3c4125(0x16c) + _0x3c4125(0x169) + '!',
                'EgOnQ': function (_0x2bf225) {
                    return _0x2bf225();
                },
                'MuqfT': _0x3c4125(0x170),
                'JAiSd': _0x3c4125(0x173),
                'dybYS': _0x3c4125(0x143),
                'QXlVG': _0x3c4125(0x151),
                'QBbuR': _0x3c4125(0x17e),
                'zBKcb': _0x3c4125(0x150)
            };
        return new Promise((_0x5e4cb8, _0xa6ff61) => {
            const _0xef2885 = _0x3c4125, _0x2f3fb5 = {
                    'GzLLS': _0x4cfd41[_0xef2885(0x174)],
                    'Nwqmm': function (_0x4b5b72) {
                        const _0x4d9ca2 = _0xef2885;
                        return _0x4cfd41[_0x4d9ca2(0x153)](_0x4b5b72);
                    }
                };
            fluent_ffmpeg_1[_0xef2885(0x13f)][_0xef2885(0x162) + _0xef2885(0x182)](ffmpeg_1[_0xef2885(0x168)]), loggerZPRO_1[_0xef2885(0x15c)][_0xef2885(0x14a)](_0xef2885(0x172) + _0xef2885(0x167) + _0xef2885(0x156) + _0xef2885(0x154) + _0x3eba27 + _0xef2885(0x16b) + _0xdcff3a);
            if (!fs_1[_0xef2885(0x13f)][_0xef2885(0x163)](_0x3eba27)) {
                const _0x177022 = _0xef2885(0x149) + _0xef2885(0x178) + _0xef2885(0x15f) + _0x3eba27;
                return loggerZPRO_1[_0xef2885(0x15c)][_0xef2885(0x151)](_0x177022), _0x4cfd41[_0xef2885(0x152)](_0xa6ff61, new Error(_0x177022));
            }
            (-0x25bc + 0x57 * -0x61 + -0x7db * -0x9, fluent_ffmpeg_1[_0xef2885(0x13f)])(_0x3eba27)[_0xef2885(0x15d) + 't'](_0x4cfd41[_0xef2885(0x158)])[_0xef2885(0x148)](_0xdcff3a)[_0xef2885(0x15a) + 'at'](_0x4cfd41[_0xef2885(0x159)])['on'](_0x4cfd41[_0xef2885(0x180)], _0x2d7f6f => {
                const _0x1dba90 = _0xef2885;
                loggerZPRO_1[_0x1dba90(0x15c)][_0x1dba90(0x14a)](_0x1dba90(0x172) + _0x1dba90(0x167) + _0x1dba90(0x179) + _0x1dba90(0x14e) + _0x1dba90(0x14f) + '\x20' + _0x2d7f6f);
            })['on'](_0x4cfd41[_0xef2885(0x160)], _0xeefaee => {
                const _0x50c843 = _0xef2885;
                loggerZPRO_1[_0x50c843(0x15c)][_0x50c843(0x14a)](_0x50c843(0x172) + _0x50c843(0x167) + _0x50c843(0x161) + _0x50c843(0x176) + _0xeefaee[_0x50c843(0x13e)]), _0x4cfd41[_0x50c843(0x152)](_0xa6ff61, _0xeefaee);
            })['on'](_0x4cfd41[_0xef2885(0x17c)], _0x34f411 => {
                const _0x333cc6 = _0xef2885;
                loggerZPRO_1[_0x333cc6(0x15c)][_0x333cc6(0x14a)](_0x333cc6(0x172) + _0x333cc6(0x167) + _0x333cc6(0x16a) + _0x333cc6(0x147) + _0x34f411[_0x333cc6(0x165)] + _0x333cc6(0x13b));
            })['on'](_0x4cfd41[_0xef2885(0x140)], () => {
                const _0x1f3ca1 = _0xef2885;
                loggerZPRO_1[_0x1f3ca1(0x15c)][_0x1f3ca1(0x14a)](_0x2f3fb5[_0x1f3ca1(0x145)]), _0x2f3fb5[_0x1f3ca1(0x16d)](_0x5e4cb8);
            })[_0xef2885(0x155)]();
        });
    };
function _0xa983(_0x442e1c, _0x300c49) {
    const _0x190a4b = _0xe1eb();
    return _0xa983 = function (_0x208849, _0x2b7303) {
        _0x208849 = _0x208849 - (-0x1887 + 0x51c + 0x14a6);
        let _0x40b7d8 = _0x190a4b[_0x208849];
        return _0x40b7d8;
    }, _0xa983(_0x442e1c, _0x300c49);
}
exports[_0x168688(0x15e) + _0x168688(0x17f)] = convertMpegToMp4;